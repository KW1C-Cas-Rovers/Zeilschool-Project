name: Laravel

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  laravel-setup:

    runs-on: ubuntu-latest

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, intl, pdo_sqlite
        ini-values: post_max_size=256M, max_execution_time=180
        coverage: xdebug
        tools: php-cs-fixer, phpunit

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '22.8.0'

    - name: Checkout
      uses: actions/checkout@v4

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-

    - name: Install NPM dependencies
      run: npm install

    - name: Build assets
      run: npm run build

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Generate key
      run: php artisan key:generate

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Run migrations
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --force

    - name: Seed the database
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan db:seed

    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test --coverage-text --coverage-xml --coverage-clover
